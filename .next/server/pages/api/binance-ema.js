"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/binance-ema";
exports.ids = ["pages/api/binance-ema"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbinance-ema&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbinance-ema.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbinance-ema&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbinance-ema.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\binance-ema.ts */ \"(api-node)/./pages/api/binance-ema.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/binance-ema\",\n        pathname: \"/api/binance-ema\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_binance_ema_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/binance-ema\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/binance-ema\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbinance-ema&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbinance-ema.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/binance-ema.ts":
/*!**********************************!*\
  !*** ./pages/api/binance-ema.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Fungsi untuk menghitung EMA\nfunction calculateEMA(prices, period) {\n    const k = 2 / (period + 1);\n    let emaArray = [];\n    let ema = prices[0];\n    emaArray.push(ema);\n    for(let i = 1; i < prices.length; i++){\n        ema = prices[i] * k + ema * (1 - k);\n        emaArray.push(ema);\n    }\n    return emaArray;\n}\n// Fungsi untuk deteksi cross EMA\nfunction detectEMACross(emaShort, emaLong) {\n    if (emaShort.length < 2 || emaLong.length < 2) return null;\n    const prevDiff = emaShort[emaShort.length - 2] - emaLong[emaLong.length - 2];\n    const currDiff = emaShort[emaShort.length - 1] - emaLong[emaLong.length - 1];\n    if (prevDiff < 0 && currDiff > 0) return \"up\";\n    if (prevDiff > 0 && currDiff < 0) return \"down\";\n    return null;\n    return null;\n}\n// Fungsi untuk mengirim notifikasi ke Telegram\nasync function sendTelegramMessage(message) {\n    const token = process.env.TELEGRAM_BOT_TOKEN;\n    const chatId = process.env.TELEGRAM_CHAT_ID;\n    if (!token || !chatId) return;\n    await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.telegram.org/bot${token}/sendMessage`, {\n        chat_id: chatId,\n        text: message\n    });\n}\n// Global variable untuk status bot\nlet botRunning = true;\n// API route untuk monitoring EMA cross\nasync function handler(req, res) {\n    // Endpoint test koneksi ke Telegram bot\n    if (req.query.test === \"telegram\") {\n        const token = process.env.TELEGRAM_BOT_TOKEN;\n        const chatId = process.env.TELEGRAM_CHAT_ID;\n        if (!token || !chatId) {\n            return res.status(500).json({\n                success: false,\n                error: \"Token/chatId tidak ditemukan\"\n            });\n        }\n        try {\n            const testMsg = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`https://api.telegram.org/bot${token}/sendMessage`, {\n                chat_id: chatId,\n                text: \"Test koneksi bot Telegram sukses.\"\n            });\n            if (testMsg.data && testMsg.data.ok) {\n                return res.status(200).json({\n                    success: true,\n                    message: \"Koneksi ke Telegram bot sukses.\"\n                });\n            } else {\n                return res.status(500).json({\n                    success: false,\n                    error: \"Gagal kirim pesan ke Telegram.\"\n                });\n            }\n        } catch (err) {\n            return res.status(500).json({\n                success: false,\n                error: err.message\n            });\n        }\n    }\n    // Endpoint test koneksi ke Binance API\n    if (req.query.test === \"binance\") {\n        try {\n            const pingRes = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.binance.com/api/v3/ping\");\n            if (pingRes.status === 200) {\n                return res.status(200).json({\n                    success: true,\n                    message: \"Koneksi ke Binance API sukses.\"\n                });\n            } else {\n                return res.status(500).json({\n                    success: false,\n                    error: \"Ping Binance gagal.\"\n                });\n            }\n        } catch (err) {\n            return res.status(500).json({\n                success: false,\n                error: err.message\n            });\n        }\n    }\n    // Jika ada query ?action=pause atau ?action=run, update status\n    if (req.query.action === \"pause\") {\n        botRunning = false;\n        return res.status(200).json({\n            success: true,\n            status: \"paused\"\n        });\n    }\n    if (req.query.action === \"run\") {\n        botRunning = true;\n        return res.status(200).json({\n            success: true,\n            status: \"running\"\n        });\n    }\n    // Jika status pause, langsung return tanpa scan\n    if (!botRunning) {\n        return res.status(200).json({\n            success: true,\n            status: \"paused\"\n        });\n    }\n    try {\n        const pairCount = Number(req.query.pairCount) || 1000;\n        const symbolsRes = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.binance.com/api/v3/exchangeInfo\");\n        const usdtPairs = symbolsRes.data.symbols.filter((s)=>s.symbol.endsWith(\"USDT\")).slice(0, pairCount).map((s)=>s.symbol);\n        for (const symbol of usdtPairs){\n            let tf15m = null;\n            let tf1h = null;\n            // Ambil data 15m\n            try {\n                const klines15m = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.binance.com/api/v3/klines\", {\n                    params: {\n                        symbol,\n                        interval: \"15m\",\n                        limit: 120\n                    }\n                });\n                const closes15m = klines15m.data.map((k)=>parseFloat(k[4]));\n                const volumes15m = klines15m.data.map((k)=>parseFloat(k[5]));\n                const ema7_15m = calculateEMA(closes15m, 7);\n                const ema25_15m = calculateEMA(closes15m, 25);\n                const ema99_15m = calculateEMA(closes15m, 99);\n                const minVolume = 5000;\n                const currVolume = volumes15m[volumes15m.length - 1];\n                if (currVolume < minVolume) tf15m = null;\n                else {\n                    const currClose = closes15m[closes15m.length - 1];\n                    const minDistance = currClose * 0.003;\n                    const dist725 = Math.abs(ema7_15m[ema7_15m.length - 1] - ema25_15m[ema25_15m.length - 1]);\n                    const dist799 = Math.abs(ema7_15m[ema7_15m.length - 1] - ema99_15m[ema99_15m.length - 1]);\n                    if (dist799 < minDistance || dist799 < dist725) tf15m = null;\n                    else {\n                        const prevEma7 = ema7_15m[ema7_15m.length - 2];\n                        const prevEma25 = ema25_15m[ema25_15m.length - 2];\n                        const prevEma99 = ema99_15m[ema99_15m.length - 2];\n                        const currEma7 = ema7_15m[ema7_15m.length - 1];\n                        const currEma25 = ema25_15m[ema25_15m.length - 1];\n                        const currEma99 = ema99_15m[ema99_15m.length - 1];\n                        const percent799 = (currEma7 - currEma99) / currClose * 100;\n                        const tpBuy799 = currClose + Math.abs(currEma7 - currEma99) * 2;\n                        const tpSell799 = currClose - Math.abs(currEma7 - currEma99) * 2;\n                        const percentProfitBuy799 = (tpBuy799 - currClose) / currClose * 100;\n                        const percentProfitSell799 = (currClose - tpSell799) / currClose * 100;\n                        const minProfitPercent = 0.2;\n                        // Cross up EMA7/99\n                        if (prevEma7 < prevEma99 && currEma7 > currEma99 && percentProfitBuy799 >= minProfitPercent) {\n                            tf15m = {\n                                type: \"buy\",\n                                currClose,\n                                currVolume,\n                                currEma7,\n                                currEma25,\n                                currEma99,\n                                dist799,\n                                percent799,\n                                tp: tpBuy799,\n                                sl: currEma99,\n                                percentProfit: percentProfitBuy799\n                            };\n                        } else if (prevEma7 > prevEma99 && currEma7 < currEma99 && percentProfitSell799 >= minProfitPercent) {\n                            tf15m = {\n                                type: \"sell\",\n                                currClose,\n                                currVolume,\n                                currEma7,\n                                currEma25,\n                                currEma99,\n                                dist799,\n                                percent799,\n                                tp: tpSell799,\n                                sl: currEma99,\n                                percentProfit: percentProfitSell799\n                            };\n                        }\n                    }\n                }\n            } catch (err) {\n                tf15m = null;\n            }\n            // Ambil data 1h\n            try {\n                const klines1h = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.binance.com/api/v3/klines\", {\n                    params: {\n                        symbol,\n                        interval: \"1h\",\n                        limit: 120\n                    }\n                });\n                const closes1h = klines1h.data.map((k)=>parseFloat(k[4]));\n                const ema25_1h = calculateEMA(closes1h, 25);\n                const ema99_1h = calculateEMA(closes1h, 99);\n                const prevEma25_1h = ema25_1h[ema25_1h.length - 2];\n                const currEma25_1h = ema25_1h[ema25_1h.length - 1];\n                const prevEma99_1h = ema99_1h[ema99_1h.length - 2];\n                const currEma99_1h = ema99_1h[ema99_1h.length - 1];\n                // Trend konfirmasi\n                if (currEma25_1h > currEma99_1h) tf1h = \"up\";\n                else if (currEma25_1h < currEma99_1h) tf1h = \"down\";\n                else tf1h = null;\n            } catch (err) {\n                tf1h = null;\n            }\n            // Kirim sinyal hanya jika 15m dan 1h saling mengkonfirmasi\n            if (tf15m && tf1h) {\n                // Ambil harga open 24 jam lalu dari candle 1h\n                let percentChange24h = null;\n                try {\n                    const klines1h24 = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.binance.com/api/v3/klines\", {\n                        params: {\n                            symbol,\n                            interval: \"1h\",\n                            limit: 25\n                        }\n                    });\n                    const open24h = parseFloat(klines1h24.data[0][1]); // open candle 24 jam lalu\n                    percentChange24h = (tf15m.currClose - open24h) / open24h * 100;\n                } catch (err) {\n                    percentChange24h = null;\n                }\n                // Ambil data long/short ratio dari Binance Futures\n                let longShortText = \"-\";\n                try {\n                    const ratioRes = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://fapi.binance.com/futures/data/globalLongShortAccountRatio`, {\n                        params: {\n                            symbol,\n                            period: \"1h\",\n                            limit: 1\n                        }\n                    });\n                    if (ratioRes.data && ratioRes.data.length > 0) {\n                        const longRatio = parseFloat(ratioRes.data[0].longAccount);\n                        const shortRatio = parseFloat(ratioRes.data[0].shortAccount);\n                        const total = longRatio + shortRatio;\n                        if (total > 0) {\n                            const longPercent = longRatio / total * 100;\n                            const shortPercent = shortRatio / total * 100;\n                            longShortText = `Long ${longPercent.toFixed(2)}% | Short ${shortPercent.toFixed(2)}%`;\n                        }\n                    }\n                } catch (err) {\n                    longShortText = \"-\";\n                }\n                // Push pesan pump/dump jika persentase perubahan harga 24h sangat tinggi\n                const pumpThreshold = 5; // 10% naik\n                const dumpThreshold = -5; // 10% turun\n                if (percentChange24h !== null && percentChange24h >= pumpThreshold) {\n                    const pumpMsg = `🚨 PUMP ALERT\\nPair: ${symbol}\\nHarga Terakhir: ${tf15m.currClose}\\nPerubahan Harga 24h: ${percentChange24h.toFixed(2)}%\\nLong/Short: ${longShortText}\\nKeterangan: Harga naik tajam dalam 24 jam terakhir.`;\n                    await sendTelegramMessage(pumpMsg);\n                }\n                if (percentChange24h !== null && percentChange24h <= dumpThreshold) {\n                    const dumpMsg = `⚠️ DUMP ALERT\\nPair: ${symbol}\\nHarga Terakhir: ${tf15m.currClose}\\nPerubahan Harga 24h: ${percentChange24h.toFixed(2)}%\\nLong/Short: ${longShortText}\\nKeterangan: Harga turun tajam dalam 24 jam terakhir.`;\n                    await sendTelegramMessage(dumpMsg);\n                }\n                let message = \"\";\n                if (tf15m.type === \"buy\" && tf1h === \"up\") {\n                    message += `🚀 BUY SIGNAL (KONFIRMASI MULTI-TF)\\nPair: ${symbol}\\nTimeframe: 15m (Entry), 1h (Trend)\\nHarga Terakhir: ${tf15m.currClose}\\nVolume: ${tf15m.currVolume}\\nEMA7: ${tf15m.currEma7.toFixed(4)} | EMA25: ${tf15m.currEma25.toFixed(4)} | EMA99: ${tf15m.currEma99.toFixed(4)}\\nJarak EMA7-EMA99: ${tf15m.dist799.toFixed(4)} (${tf15m.percent799.toFixed(2)}%)\\nTrend 1h: UP (EMA25 > EMA99)\\nPerubahan Harga 24h: ${percentChange24h !== null ? percentChange24h.toFixed(2) + \"%\" : \"-\"}\\nLong/Short: ${longShortText}\\nKeterangan: EMA7 cross UP EMA99 di 15m, trend 1h UP, sinyal valid.`;\n                }\n                if (tf15m.type === \"sell\" && tf1h === \"down\") {\n                    message += `🔻 SELL SIGNAL (KONFIRMASI MULTI-TF)\\nPair: ${symbol}\\nTimeframe: 15m (Entry), 1h (Trend)\\nHarga Terakhir: ${tf15m.currClose}\\nVolume: ${tf15m.currVolume}\\nEMA7: ${tf15m.currEma7.toFixed(4)} | EMA25: ${tf15m.currEma25.toFixed(4)} | EMA99: ${tf15m.currEma99.toFixed(4)}\\nJarak EMA7-EMA99: ${tf15m.dist799.toFixed(4)} (${tf15m.percent799.toFixed(2)}%)\\nTrend 1h: DOWN (EMA25 < EMA99)\\nPerubahan Harga 24h: ${percentChange24h !== null ? percentChange24h.toFixed(2) + \"%\" : \"-\"}\\nLong/Short: ${longShortText}\\nKeterangan: EMA7 cross DOWN EMA99 di 15m, trend 1h DOWN, sinyal valid.`;\n                }\n                if (message) {\n                    await sendTelegramMessage(message);\n                }\n            }\n            // Delay antar request untuk menghindari rate limit\n            await new Promise((res)=>setTimeout(res, 200));\n        }\n        res.status(200).json({\n            success: true,\n            status: \"running\"\n        });\n    } catch (error) {\n        res.status(500).json({\n            error: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/binance-ema.ts\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbinance-ema&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbinance-ema.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();